/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexImport } from './routes/index'
import { Route as ScenariosIndexImport } from './routes/scenarios/index'
import { Route as FlashcardsIndexImport } from './routes/flashcards/index'
import { Route as AuthenticatedUsersMeImport } from './routes/_authenticated/users/me'
import { Route as AuthenticatedScenariosPlayImport } from './routes/_authenticated/scenarios/play'
import { Route as AuthenticatedScenariosNewImport } from './routes/_authenticated/scenarios/new'
import { Route as AuthenticatedFlashcardsStudyImport } from './routes/_authenticated/flashcards/study'
import { Route as AuthenticatedFlashcardsNewImport } from './routes/_authenticated/flashcards/new'
import { Route as AuthenticatedFlashcardsInitializeImport } from './routes/_authenticated/flashcards/initialize'

// Create/Update Routes

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ScenariosIndexRoute = ScenariosIndexImport.update({
  id: '/scenarios/',
  path: '/scenarios/',
  getParentRoute: () => rootRoute,
} as any)

const FlashcardsIndexRoute = FlashcardsIndexImport.update({
  id: '/flashcards/',
  path: '/flashcards/',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedUsersMeRoute = AuthenticatedUsersMeImport.update({
  id: '/users/me',
  path: '/users/me',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedScenariosPlayRoute = AuthenticatedScenariosPlayImport.update(
  {
    id: '/scenarios/play',
    path: '/scenarios/play',
    getParentRoute: () => AuthenticatedRoute,
  } as any,
)

const AuthenticatedScenariosNewRoute = AuthenticatedScenariosNewImport.update({
  id: '/scenarios/new',
  path: '/scenarios/new',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedFlashcardsStudyRoute =
  AuthenticatedFlashcardsStudyImport.update({
    id: '/flashcards/study',
    path: '/flashcards/study',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedFlashcardsNewRoute = AuthenticatedFlashcardsNewImport.update(
  {
    id: '/flashcards/new',
    path: '/flashcards/new',
    getParentRoute: () => AuthenticatedRoute,
  } as any,
)

const AuthenticatedFlashcardsInitializeRoute =
  AuthenticatedFlashcardsInitializeImport.update({
    id: '/flashcards/initialize',
    path: '/flashcards/initialize',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/flashcards/': {
      id: '/flashcards/'
      path: '/flashcards'
      fullPath: '/flashcards'
      preLoaderRoute: typeof FlashcardsIndexImport
      parentRoute: typeof rootRoute
    }
    '/scenarios/': {
      id: '/scenarios/'
      path: '/scenarios'
      fullPath: '/scenarios'
      preLoaderRoute: typeof ScenariosIndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/flashcards/initialize': {
      id: '/_authenticated/flashcards/initialize'
      path: '/flashcards/initialize'
      fullPath: '/flashcards/initialize'
      preLoaderRoute: typeof AuthenticatedFlashcardsInitializeImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/flashcards/new': {
      id: '/_authenticated/flashcards/new'
      path: '/flashcards/new'
      fullPath: '/flashcards/new'
      preLoaderRoute: typeof AuthenticatedFlashcardsNewImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/flashcards/study': {
      id: '/_authenticated/flashcards/study'
      path: '/flashcards/study'
      fullPath: '/flashcards/study'
      preLoaderRoute: typeof AuthenticatedFlashcardsStudyImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/scenarios/new': {
      id: '/_authenticated/scenarios/new'
      path: '/scenarios/new'
      fullPath: '/scenarios/new'
      preLoaderRoute: typeof AuthenticatedScenariosNewImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/scenarios/play': {
      id: '/_authenticated/scenarios/play'
      path: '/scenarios/play'
      fullPath: '/scenarios/play'
      preLoaderRoute: typeof AuthenticatedScenariosPlayImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/users/me': {
      id: '/_authenticated/users/me'
      path: '/users/me'
      fullPath: '/users/me'
      preLoaderRoute: typeof AuthenticatedUsersMeImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedFlashcardsInitializeRoute: typeof AuthenticatedFlashcardsInitializeRoute
  AuthenticatedFlashcardsNewRoute: typeof AuthenticatedFlashcardsNewRoute
  AuthenticatedFlashcardsStudyRoute: typeof AuthenticatedFlashcardsStudyRoute
  AuthenticatedScenariosNewRoute: typeof AuthenticatedScenariosNewRoute
  AuthenticatedScenariosPlayRoute: typeof AuthenticatedScenariosPlayRoute
  AuthenticatedUsersMeRoute: typeof AuthenticatedUsersMeRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedFlashcardsInitializeRoute:
    AuthenticatedFlashcardsInitializeRoute,
  AuthenticatedFlashcardsNewRoute: AuthenticatedFlashcardsNewRoute,
  AuthenticatedFlashcardsStudyRoute: AuthenticatedFlashcardsStudyRoute,
  AuthenticatedScenariosNewRoute: AuthenticatedScenariosNewRoute,
  AuthenticatedScenariosPlayRoute: AuthenticatedScenariosPlayRoute,
  AuthenticatedUsersMeRoute: AuthenticatedUsersMeRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteWithChildren
  '/about': typeof AboutRoute
  '/flashcards': typeof FlashcardsIndexRoute
  '/scenarios': typeof ScenariosIndexRoute
  '/flashcards/initialize': typeof AuthenticatedFlashcardsInitializeRoute
  '/flashcards/new': typeof AuthenticatedFlashcardsNewRoute
  '/flashcards/study': typeof AuthenticatedFlashcardsStudyRoute
  '/scenarios/new': typeof AuthenticatedScenariosNewRoute
  '/scenarios/play': typeof AuthenticatedScenariosPlayRoute
  '/users/me': typeof AuthenticatedUsersMeRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteWithChildren
  '/about': typeof AboutRoute
  '/flashcards': typeof FlashcardsIndexRoute
  '/scenarios': typeof ScenariosIndexRoute
  '/flashcards/initialize': typeof AuthenticatedFlashcardsInitializeRoute
  '/flashcards/new': typeof AuthenticatedFlashcardsNewRoute
  '/flashcards/study': typeof AuthenticatedFlashcardsStudyRoute
  '/scenarios/new': typeof AuthenticatedScenariosNewRoute
  '/scenarios/play': typeof AuthenticatedScenariosPlayRoute
  '/users/me': typeof AuthenticatedUsersMeRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/about': typeof AboutRoute
  '/flashcards/': typeof FlashcardsIndexRoute
  '/scenarios/': typeof ScenariosIndexRoute
  '/_authenticated/flashcards/initialize': typeof AuthenticatedFlashcardsInitializeRoute
  '/_authenticated/flashcards/new': typeof AuthenticatedFlashcardsNewRoute
  '/_authenticated/flashcards/study': typeof AuthenticatedFlashcardsStudyRoute
  '/_authenticated/scenarios/new': typeof AuthenticatedScenariosNewRoute
  '/_authenticated/scenarios/play': typeof AuthenticatedScenariosPlayRoute
  '/_authenticated/users/me': typeof AuthenticatedUsersMeRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/about'
    | '/flashcards'
    | '/scenarios'
    | '/flashcards/initialize'
    | '/flashcards/new'
    | '/flashcards/study'
    | '/scenarios/new'
    | '/scenarios/play'
    | '/users/me'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/about'
    | '/flashcards'
    | '/scenarios'
    | '/flashcards/initialize'
    | '/flashcards/new'
    | '/flashcards/study'
    | '/scenarios/new'
    | '/scenarios/play'
    | '/users/me'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/about'
    | '/flashcards/'
    | '/scenarios/'
    | '/_authenticated/flashcards/initialize'
    | '/_authenticated/flashcards/new'
    | '/_authenticated/flashcards/study'
    | '/_authenticated/scenarios/new'
    | '/_authenticated/scenarios/play'
    | '/_authenticated/users/me'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  AboutRoute: typeof AboutRoute
  FlashcardsIndexRoute: typeof FlashcardsIndexRoute
  ScenariosIndexRoute: typeof ScenariosIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  AboutRoute: AboutRoute,
  FlashcardsIndexRoute: FlashcardsIndexRoute,
  ScenariosIndexRoute: ScenariosIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated",
        "/about",
        "/flashcards/",
        "/scenarios/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/flashcards/initialize",
        "/_authenticated/flashcards/new",
        "/_authenticated/flashcards/study",
        "/_authenticated/scenarios/new",
        "/_authenticated/scenarios/play",
        "/_authenticated/users/me"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/flashcards/": {
      "filePath": "flashcards/index.tsx"
    },
    "/scenarios/": {
      "filePath": "scenarios/index.tsx"
    },
    "/_authenticated/flashcards/initialize": {
      "filePath": "_authenticated/flashcards/initialize.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/flashcards/new": {
      "filePath": "_authenticated/flashcards/new.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/flashcards/study": {
      "filePath": "_authenticated/flashcards/study.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/scenarios/new": {
      "filePath": "_authenticated/scenarios/new.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/scenarios/play": {
      "filePath": "_authenticated/scenarios/play.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/users/me": {
      "filePath": "_authenticated/users/me.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
